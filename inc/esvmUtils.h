#ifndef ESVM_UTILS_H
#define ESVM_UTILS_H

#include "esvmTypes.h"
#include "esvmOptions.h"

#include "opencv2/objdetect.hpp"

#include <string>
#include <vector>

//namespace esvm {

/* generic utilities / repetitive procedures */

cv::Mat preprocessFromMode(cv::Mat roi, cv::CascadeClassifier ccLocalSearch);

/* memory operations
   (required to match 'libsvm' types that are generated by malloc/free)
*/

#ifndef Malloc
#define Malloc(Type, Size) (Type*)malloc((Size)*sizeof(Type))
#endif/*Malloc*/

#ifndef FreeNull
#define FreeNull(Memory) free(Memory); Memory = nullptr
#endif/*FreeNull*/

/* libsvm extra utilities */

std::string svm_type_name(svmModel*);
std::string svm_type_name(int /*svm_type*/);
std::string svm_kernel_name(svmModel*);
std::string svm_kernel_name(int /*kernel_type*/);

//} // namespace esvm

#endif/*ESVM_UTILS_H*/
